# profile to pack this example into a container, to use it execute activate the maven container profile, -Pcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=jizuzquiza
%container.quarkus.container-image.tag=1.2.0
%container.quarkus.container-image.name=scib-fund-onboarding-process-service

quarkus.application.name=scib-fund-onboarding-process-service
quarkus.http.cors=true
quarkus.smallrye-openapi.path=/docs/openapi.json
quarkus.http.test-port=0
quarkus.native.native-image-xmx=8g

# Host & port (only dev mode)
%dev.quarkus.http.host=localhost
%dev.quarkus.http.port=8080

# Swagger-ui (only dev mode)
%dev.quarkus.swagger-ui.always-include=true

# Enabling dev-services (only dev mode)
quarkus.devservices.enabled=true
quarkus.kogito.devservices.enabled=false

kogito.persistence.proto.marshaller=false
kogito.generate.rest.processes=true
kogito.persistence.type=jdbc
kogito.processes.transactionEnabled=true
kogito.usertasks.transactionEnabled=true
kie.flyway.enabled=false

# Data-Index UI
quarkus.kogito.data-index.graphql.ui.always-include=true

# Kogito-service
kogito.service.url=http://localhost:8080

#Job-service
kogito.jobs-service.url=http://localhost:8080
kogito.data-index.url=http://localhost:8080
kogito.dataindex.http.url=http://localhost:8080
kogito.dataindex.ws.url=ws://localhost:8080

%dev.jbpm.devui.users.jdoe.groups=admin,HR,IT

# Kogito Datasource (only dev mode)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://localhost:5432/postgres?currentSchema=kogito}
quarkus.datasource.reactive.url=${QUARKUS_DATASOURCE_REACTIVE_URL:postgresql://localhost:5432/postgres?currentSchema=kogito}
quarkus.datasource.jdbc.enable-metrics=false
quarkus.datasource.metrics.enabled =false

# Embedded postgresql
quarkus.embedded.postgresql.port=5432

# JDBC observability
quarkus.datasource.jdbc.telemetry=false

# External business services (only dev mode, for process "ServiceTaskProcess")
quarkus.rest-client."dummy-rest-service".url=http://localhost:8089
quarkus.rest-client."scib-api-gateway".url=http://localhost:8089

# Mock services
quarkus.wiremock.devservices.enabled=true
quarkus.wiremock.devservices.files-mapping=src/main/resources/wiremock/santander-scib-gbo-api
quarkus.wiremock.devservices.port=8089
quarkus.wiremock.devservices.reload=true

# Disabling OIDC
quarkus.oidc.enabled=false

# Logs
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{20.}] (%t) %s%e%n
quarkus.logging-manager.openapi.included=true

quarkus.log.category."org.kie.kogito".level=INFO
quarkus.log.category."org.kie.kogito.quarkus.processes.devservices.DevModeWorkflowLogger".level=WARN
quarkus.log.category."org.kie.kogito.jobs".level=INFO

# OpenTelemetry Traces (Jaeger)
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
quarkus.otel.exporter.otlp.traces.headers=Authorization=Bearer my_secret

# OpenTelemetry Metrics (Jaeger)
quarkus.micrometer.enabled=true
quarkus.datasource.jdbc.enable-metrics=true
quarkus.datasource.metrics.enabled=true
quarkus.micrometer.binder.http-client.enabled=true
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.kafka.enabled=false
quarkus.micrometer.binder.system=true
quarkus.micrometer.binder.vertx.enabled=true
quarkus.micrometer.binder.netty.enabled=false
quarkus.micrometer.registry-enabled-default=false
quarkus.micrometer.export.json.enabled=true
quarkus.micrometer.export.json.path=metrics/json
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.default-registry=true
quarkus.micrometer.export.prometheus.path=metrics/prometheus
quarkus.micrometer.export.otlp.enabled=false
#quarkus.micrometer.export.otlp.url=http://localhost:4318/v1/metrics
#quarkus.micrometer.export.otlp.get-enabled=true

%dev.kogito.events.processinstances.enabled=true
%dev.kogito.events.usertasks.enabled=true
%dev.kogito.events.processdefinitions.enabled=true

# ELK monitoring
%dev.kogito.addon.monitoring.elastic.host=http://localhost:9200
%dev.kogito.addon.monitoring.elastic.index=test-index-kogito
%dev.kogito.addon.monitoring.elastic.autoCreateIndex=true